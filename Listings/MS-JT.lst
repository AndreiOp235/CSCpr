C51 COMPILER V8.02   MS_JT                                                                 03/10/2025 15:59:13 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE MS_JT
OBJECT MODULE PLACED IN .\Objects\MS-JT.obj
COMPILER INVOKED BY: D:\Apps\Keil\C51\BIN\C51.EXE MS-JT.c LARGE BROWSE INCDIR(.\BIG8051\Include) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\MS-JT.lst) OBJECT(.\Objects\MS-JT.obj)

line level    source

   1          #include <c8051F040.h>  // declaratii SFR
   2          #include <wdt.h>
   3          #include <osc.h>
   4          #include <port.h>
   5          #include <uart0.h>
   6          #include <uart1.h>
   7          #include <lcd.h>
   8          #include <keyb.h>
   9          #include <Protocol.h>
  10          #include <UserIO.h>
  11          
  12          nod retea[NR_NODURI];                           // retea cu 3 noduri
  13          
  14          unsigned char STARE_COM = 0;            // starea initiala a FSA COM
  15          unsigned char STARE_IO  = 0;            // stare initiala FSA interfata IO - asteptare comenzi
  16          unsigned char TIP_NOD   = 0;            // tip nod initial: Slave sau No JET
  17          unsigned char ADR_MASTER;                       // adresa nod master - numai MS
  18          
  19          extern unsigned char AFISARE;           // flag permitere afisare
  20          
  21          //********************************************************************************************************
             -***
  22          void TxMesaj(unsigned char i);                          // transmisie mesaj destinat nodului i
  23          unsigned char RxMesaj(unsigned char i);         // primire mesaj de la nodul i
  24          
  25          //********************************************************************************************************
             -***
  26          void main (void) {
  27   1              unsigned char i, found;                         // variabile locale
  28   1              
  29   1              WDT_Disable();                                                  // dezactiveaza WDT
  30   1              SYSCLK_Init();                                                  // initializeaza si selecteaza oscilatorul ales in osc.h
  31   1              UART1_Init(NINE_BIT, BAUDRATE_COM);             // initilizare UART1 - port comunicatie (TxD la P1.0 si RxD la P1.1)
  32   1              UART1_TxRxEN (1,1);                                             // validare Tx si Rx UART1
  33   1              
  34   1              PORT_Init ();                                                   // conecteaza perifericele la pini (UART0, UART1) si stabileste tipul pinilor
  35   1      
  36   1              LCD_Init();                                                     // 2 linii, display ON, cursor OFF, pozitia initiala (0,0)
  37   1              KEYB_Init();                                                    // initializare driver tastatura matriciala locala
  38   1              UART0_Init(EIGHT_BIT, BAUDRATE_IO);             // initializare UART0  - conectata la USB-UART (P0.0 si P0.1)
  39   1      
  40   1              Timer0_Init();                                                  // initializare Timer 0
  41   1      
  42   1              EA = 1;                                         // valideaza intreruperile
  43   1              SFRPAGE = LEGACY_PAGE;                          // selecteaza pagina 0 SFR
  44   1              
  45   1              for(i = 0; i < NR_NODURI; i++){         // initializare structuri de date
  46   2                      retea[i].full = 0;                                      // initializeaza buffer gol pentru toate nodurile
  47   2                      retea[i].bufasc[0] = ':';                       // pune primul caracter in buffer-ele ASCII ':'
  48   2              }
  49   1      
  50   1              Afisare_meniu();                                                // Afiseaza meniul de comenzi
  51   1              
  52   1              while(1){                                                               // bucla infinita
C51 COMPILER V8.02   MS_JT                                                                 03/10/2025 15:59:13 PAGE 2   

  53   2                                                                                                                                      
  54   2                      switch(STARE_COM){
  55   3                              case 0:
  56   3      
  57   3      #if(PROTOCOL == MS)                                                     // nodul este slave, asteapta mesaj complet si corect de la master      
  58   3      
  59   3                                      switch(RxMesaj(ADR_NOD)){                       // asteapta un mesaj de la master
  60   4                                              case TMO:                                                       
  61   4                                                                                                                      // anunta ca nodul curent devine master ???
  62   4                                                      TIP_NOD=MASTER;                                                         // nodul curent devine master
  63   4                                                      Afisare_meniu();                                                                // Afiseaza meniul de comenzi
  64   4                                                      STARE_COM=2;                                                            // trece in starea 2
  65   4                                                                                                                      // primul slave va fi cel care urmeaza dupa noul master ????
  66   4                                                                      break;
  67   4      
  68   4                                              case ROK:                                                                       
  69   4                                                      AfisareMesaj();
*** WARNING C206 IN LINE 69 OF MS-JT.C: 'AfisareMesaj': missing function-prototype
  70   4                                                      break;  // a primit un mesaj de la master, il afiseaza
  71   4                                              case POK:       
  72   4                                                      STARE_COM = 1;                                  
  73   4                                                      break;  // si trebuie sa raspunda
  74   4                                              case CAN:
  75   4                                                      Error("Mesaj incomplet");                                                               
  76   4                                                      break;  // afiseaza eroare Mesaj incomplet
  77   4                                              case TIP:                                                                       
  78   4                                                      Error("Tip mesaj necunoscut");
  79   4                                                      break;  // afiseaza eroare Tip mesaj necunoscut
  80   4                                              case ESC:
  81   4                                                      Error("Eroare SC");                                                                     
  82   4                                                      break;  // afiseaza Eroare SC
  83   4                                              default:
  84   4                                                      Error("cod UNK");
  85   4                                                      Delay(1000);
  86   4                                                      break;  // afiseaza cod eroare necunoscut, asteapta 1 sec
  87   4                                      }
  88   3      #endif
  89   3      
  90   3      #if(PROTOCOL == JT)                                                                     // nodul nu detine jetonul, asteapta un mesaj util sau jetonul
                                              
                                              switch(RxMesaj(ADR_NOD)){                               // asteapta jetonul de la master
                                                      
                                                      case TMO:                                                               // a primit un mesaj USER_MES
                                                                                                                                              // anunta ca nodul a regenerat jetonul 
                                                                                                                                              // nodul curent detine jetonul
                                                                                                                                              // Daca e permisa afisarea, afiseaza meniul de comenzi
                                                                                                                                              // trece in starea 1
                                                              break;
              
                                                      
                                                      case JOK:                                                               // a primit jetonul
                                                              
                                                              Delay(WAIT/2);                                          // asteapta WAIT/2 ms
                                                      
                                                                                                                                                                                              // adresa HW dest este adr_hw_src
                                                                                                                                                                                              // adresa HW src este ADR_NOD
                                                                                                                                                                                              // tip mesaj = JET_MES
                                                                                                                                                                                              // transmite mesajul JET_MES din bufferul ADR_NOD
                                                                                                                                                                                              // nodul curent detine jetonul
                
                                              }
              #endif                                                          
C51 COMPILER V8.02   MS_JT                                                                 03/10/2025 15:59:13 PAGE 3   

 114   3                                      break;
 115   3      
 116   3                              case 1:                                                                                 
 117   3      
 118   3      #if(PROTOCOL == MS)                                                                             // nodul este slave, transmite mesaj catre master                       
 119   3                                                                                                                                      
 120   3                                                                                                                                                      // cauta sa gaseasca un mesaj util de transmis
 121   3                                                                                                      
 122   3                                                                                                                                      
 123   3                                                                                                                                      
 124   3                                                                                                                              
 125   3                                                                                                                      
 126   3                                                                                                                                                      // daca gaseste un nod i
 127   3                                                                                                                                                              // adresa HW dest este ADR_MASTER
 128   3                                                                                                                                                              // transmite mesajul pentru nodul i
 129   3                                                                                                                                      
 130   3                                                                                                                                                      // daca nu gaseste, construieste un mesaj in bufferul ADR_MASTER
 131   3                                                                                                                                                              // adresa HW dest este ADR_MASTER
 132   3                                                                                                                                                              // adresa HW src este ADR_NOD
 133   3                                                                                                                                                              // tip mesaj = POLL_MES
 134   3                                                                                                                                                              // transmite mesajul din bufferul ADR_MASTER
 135   3                                                                                                                              
 136   3                                                                                                                                      // trece in starea 0, sa astepte un nou mesaj de la master
 137   3                                      break;
 138   3      #endif
 139   3      
 140   3      #if(PROTOCOL == JT)                                                     // nodul detine jetonul, poate transmite un mesaj USER_MES                              
                                              
                                              
                                                                                                                                                                      // cauta sa gaseasca un mesaj util de transmis
                      
              
              
              
              
                                                                                                                                                                                      // daca gaseste un mesaj de transmis catre nodul i
                                                                                                                                                                                              // adresa HW dest este dest
                                                                                                                                                                                              // transmite mesajul catre nodul i
                                                                                                                                                                                              // asteapta procesarea mesajului la destinatie (WAIT/2 msec)
              
                                                                                                                                                              // va incerca sa transmita jetonul nodului urmator 
                                                                                                                                                              // trece in starea 2, sa transmita jetonul urmatorului nod
              #endif  
 157   3                                      
 158   3                              break;  
 159   3                                      
 160   3                              case 2:                                                                                 // tratare stare 2 si comutare stare
 161   3      
 162   3      #if(PROTOCOL == MS)                                                                                     // nodul este master, tratare stare 2 si comutare stare
 163   3                                                                                                                              
 164   3                                                                                                                                              // selecteaza urmatorul slave (incrementeaza i si sare peste adresa proprie)
 165   3                                                                                                                                              
 166   3                                                                                                                      
 167   3                                                                                                                      
 168   3              
 169   3                                                                                                                                              // adresa HW dest este i
 170   3                                                                                                                                              // daca in bufferul i se afla un mesaj util, il transmite
 171   3                                                                                                                                              // altfel, construieste un mesaj de interogare in bufferul i
 172   3                                                                                                                                              // adresa HW src este ADR_NOD
 173   3                                                                                                                                              // tip mesaj = POLL_MES
 174   3                                                                                                                                              // transmite mesajul din bufferul i
 175   3                                                                                                                              
C51 COMPILER V8.02   MS_JT                                                                 03/10/2025 15:59:13 PAGE 4   

 176   3                                                                                                                                      // trece in starea 3, sa astepte raspunsul de la slave-ul i
 177   3      
 178   3      #endif
 179   3      
 180   3      #if(PROTOCOL == JT)                                                                                     // nodul transmite jetonul urmatorului nod              
                                              
                                                                                                                                                                              // selecteaza urmatorul slave (incrementeaza i si sare peste adresa proprie)
                                                      
                      
                      
                      
                                                                                                                                                                              // asteapta WAIT/2 sec
                                              
                                                                                                                                                                              // adresa HW dest este i
                                                                                                                                                                              // adresa HW src este ADR_NOD
                                                                                                                                                                              // tip mesaj = JET_MES
                                                                                                                                                                              // transmite mesajul din bufferul i
                                                                                                                                                                              // trece in starea 3, sa astepte confirmarea de la nodul i ca jetonul a fost primit
              #endif
 195   3      
 196   3                              break;
 197   3      
 198   3                              case 3:
 199   3      
 200   3      #if(PROTOCOL == MS)                                                                             // nodul este master, asteapta mesaj de la slave        
 201   3                                                                                                                                      
 202   3                                      switch(RxMesaj(i)){                                                             // asteapta un raspuns de la slave i
 203   4                                              case TMO:                                                                               // afiseaza eroare Timeout nod i
 204   4                                                                      
 205   4                                                                      break;
 206   4                                              case ROK:                                                                                                       break;  // a primit un mesaj de date, il afiseaza
 207   4                                                                                                                                                                                      // a primit un mesaj de interogare, trece mai departe
 208   4                                              case ERI:                                                                                                       break;  // afiseaza Eroare incadrare
 209   4                                              case ERA:                                                                                                       break;  // afiseaza Eroare adresa
 210   4                                              case TIP:                                                                                                       break;  // afiseaza Tip mesaj necunoscut
 211   4                                              case OVR:                                                                                                       break;  // afiseaza Eroare suprapunere
 212   4                                              case ESC:                                                                                                       break;  // afiseaza Eroare SC
 213   4                                              case CAN:                                                                                                       break;  // afiseaza mesaj incomplet
 214   4      
 215   4                                              default:                                                                                                        break;  // afiseaza Eroare necunoscuta, apoi asteapta 1000ms
 216   4                                      }
 217   3                                                                                                                                              // revine in starea 2 (a primit sau nu un raspuns de la slave, trece la urmatorul slave)
 218   3      #endif
 219   3      
 220   3                              
 221   3      #if(PROTOCOL == JT)                                                                                             // asteapta confirmarea primirii jetonului de care nodul i              
                                              switch(RxMesaj(i)){                                                                     // asteapta un raspuns de la nod i
                                                      case TMO:                                                                                                                               // afiseaza eroare Timeout nod i
                                                                              
              
                                                                                                                                                                                                      // revine in starea 2 (nu a primit raspuns)
                                                                              break;
                                                      case JOK:                                                                                                                               // a primit confirmarea transferului jetonului, revine in starea 0
                                                                                                                                                                                                                      // nodul nu mai detine jetonul
                                                                                                                                                                                                                      // daca afisarea e permisa, afiseaza meniul
                                                                              break;
                                                      case ERI:                                                                                                                               // afiseaza Eroare incadrare
                                                                                                                                                                                                                      // revine in starea 0
                                                                                                                                                                                                                      // nodul nu mai detine jetonul
                                                                                                                                                                                                                      // afiseaza meniul
                                                                                              break;                  
                                                      case ERA:                                                                                                                               // afiseaza Eroare adresa
C51 COMPILER V8.02   MS_JT                                                                 03/10/2025 15:59:13 PAGE 5   

                                                                                                                                                                                                                      // revine in starea 0
                                                                                                                                                                                                                      // nodul nu mai detine jetonul
                                                                                                                                                                                                                      // afiseaza meniul
                                                                                              break;                  
                                                      
                                                      case CAN:                                                                                                                               // afiseaza Mesaj incomplet
                                                                                                                                                                                                                      // revine in starea 0
                                                                                                                                                                                                                      // nodul nu mai detine jetonul
                                                                                                                                                                                                                      // afiseaza meniul
                                                                                              break;                  
                                                      
                                                      case TIP:                                                                                                                               // afiseaza Tip mesaj necunoscut
                                                                                                                                                                                                                      // revine in starea 0
                                                                                                                                                                                                                      // nodul nu mai detine jetonul
                                                                                                                                                                                                                      // afiseaza meniul
                                                                                              break;                  
                                                      
                                                      case ESC:                                                                                                                               // afiseaza Eroare SC
                                                                                                                                                                                                                      // revine in starea 0
                                                                                                                                                                                                                      // nodul nu mai detine jetonul
                                                                                                                                                                                                                      // afiseaza meniul
                                                                                              break;                  
              
                                                      default:                                                                                                                                // afiseaza Eroare necunoscuta
                                                                                                                                                                                                                      // asteapta 1000 ms
                                                                                                                                                                                                                      // revine in starea 0
                                                                                                                                                                                                                      // nodul nu mai detine jetonul
                                                                                                                                                                                                                      // afiseaza meniul
                                                                                              break;                  
                                      }
                                              
              #endif
 270   3                              
 271   3                              break;                  
 272   3                      }
 273   2                      
 274   2                      UserIO();                                                       // apel functie interfata
 275   2              }
 276   1      }
*** WARNING C280 IN LINE 27 OF MS-JT.C: 'found': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =     55    ----
   XDATA SIZE       =    169       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
